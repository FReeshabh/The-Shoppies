{"version":3,"sources":["components/Movie.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Movie","id","title","year","img","plot","className","src","height","width","alt","App","useState","movies","setMovies","query","setQuery","search","setSearch","nominations","setNominations","useEffect","getMovies","getSearch","a","fetch","response","json","data","Search","console","log","e","trim","onSubmit","onChange","type","value","target","length","map","movie","imdbID","Title","Year","Poster","Button","disabled","includes","onClick","film","newNomination","alert","addNomination","nomination","filter","removeNomination","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAGe,SAASA,EAAT,GAA6C,EAA7BC,GAA8B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,IAAY,EAAPC,KACjD,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAKI,OAAO,UAAUC,MAAM,UAAUC,IAAKR,IACrD,+BAAKA,EAAL,IAAaC,EAAb,U,YCqGGQ,MAxGf,WACI,IADW,EAEiBC,mBAAS,IAF1B,mBAEJC,EAFI,KAEIC,EAFJ,OAGeF,mBAAS,QAHxB,mBAGJG,EAHI,KAGGC,EAHH,OAIiBJ,mBAAS,QAJ1B,mBAIJK,EAJI,KAIIC,EAJJ,OAK2BN,mBAAS,IALpC,mBAKJO,EALI,KAKSC,EALT,KAOXC,qBAAU,WACPC,IACAC,MACA,CAACR,EAAOE,IAGX,IAAMK,EAAS,uCAAG,8BAAAE,EAAA,sEACOC,MAAM,8BAAD,OACIV,EADJ,mBAbhB,aAYI,cACVW,EADU,gBAIGA,EAASC,OAJZ,OAIVC,EAJU,OAKhBd,EAAUc,EAAKC,QACfC,QAAQC,IAAIH,EAAKC,QAND,2CAAH,qDAeTN,EAAY,SAAAS,GAChBhB,EAASC,EAAOgB,SAwBpB,OAEA,cADE,CACF,OAAK3B,UAAU,MAAf,UACE,uBAAMA,UAAU,cACd4B,SAAUX,EACVY,SAAUZ,EAFZ,UAGE,oBAAIjB,UAAU,aAAd,0DACA,uBAAOA,UAAU,aAAa8B,KAAK,OAAOC,MAAOpB,EAAQkB,SArCtC,SAAAH,GACnBd,EAAUc,EAAEM,OAAOD,UAgCrB,IAIsF,wBAAQ/B,UAAU,gBAAgB8B,KAAK,SAAvC,uBAItF,+BAAMvB,GAAUA,EAAO0B,OAAS,EAAK1B,EAAO0B,OAAQ,IAApD,mBAAwE,4BAAIxB,IAA5E,OACA,sBAAKT,UAAU,MAAf,UAEE,qBAAKA,UAAU,cAAf,SACGO,EAASA,EAAO2B,KAAI,SAAAC,GAAK,OAC1B,6BACE,+BAAI,cAACzC,EAAD,CACJC,GAAIwC,EAAMC,OACVxC,MAASuC,EAAME,MACfxC,KAAQsC,EAAMG,KACdxC,IAAOqC,EAAMI,SAEb,cAACC,EAAA,EAAD,CAAQxC,UAAU,SAASyC,SAAU5B,EAAY6B,SAASP,GAAQQ,QAAS,YA3C3D,SAAAC,GACpB,IAAI/B,EAAY6B,SAASE,GAAM,CAC7B,IAAMC,EAAa,CAAID,GAAJ,mBAAa/B,IAChCC,EAAe+B,GACfrB,QAAQC,IAAIZ,GAEdW,QAAQC,IAAIZ,EAAYoB,QACrBpB,EAAYoB,OAAS,GAEtBa,MAAM,6CAkC8EC,CAAcZ,IAAhG,8BAGD,mCAAK,uDAA0B1B,EAA1B,YAGV,sBAAKT,UAAU,mBAAf,UACE,6CACCa,EAAYqB,KAAI,SAAAc,GAAU,OACzB,6BACE,+BACE,cAACtD,EAAD,CACGC,GAAIqD,EAAWZ,OACfxC,MAASoD,EAAWX,MACpBxC,KAAQmD,EAAWV,KACnBxC,IAAOkD,EAAWT,SAEnB,cAACC,EAAA,EAAD,CAAQxC,UAAU,SAAS2C,QAAS,YA9C9C,SAA0BhD,GACxB,IAAMkD,EAAgBhC,EAAYoC,QAAO,SAACL,GAAD,OAAUA,EAAKR,SAAWzC,KACnEmB,EAAe+B,GACfrB,QAAQC,IAAIZ,GA2CuCqC,CAAiBF,EAAWZ,SAAvE,iDCrFCe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.98f81636.chunk.js","sourcesContent":["import React from 'react'\nimport '../App.css'\n\nexport default function Movie({id, title, year, img, plot}) {\n    return (\n        <div className=\"Movie\">\n            <img src={img} height=\"166.5px\" width=\"112.5px\" alt={title}></img>\n            <h4>{title}({year})</h4>\n        </div>\n    )\n}\n\n","import React, {useState, useEffect} from 'react';\nimport Movie from './components/Movie';\nimport Button from '@material-ui/core/Button';\n\nfunction App() {\n    const APP_KEY=\"df9d5122\" //API key should be hidden, but oof\n    const [movies, setMovies] = useState([])\n    const [query, setQuery] = useState('shop')\n    const [search, setSearch] = useState('shop')\n    const [nominations, setNominations] = useState([])\n  \n    useEffect(() => {\n       getMovies()\n       getSearch()\n    }, [query, search])\n\n    //fetch the movies\n    const getMovies = async () => {\n      const response = await fetch(\n        `https://www.omdbapi.com/?s=${query}&apikey=${APP_KEY}`\n      );\n      const data = await response.json();\n      setMovies(data.Search)\n      console.log(data.Search);\n    }\n    \n    //update and set Search value\n    const updateSearch = e => {\n      setSearch(e.target.value);\n    }\n    \n    //set the search term to send to the query\n    const getSearch = e => {\n      setQuery(search.trim());\n    }\n\n    //function to add a movie to the nomination list\n    const addNomination = film => {\n      if(!nominations.includes(film)){\n        const newNomination = [film, ...nominations]\n        setNominations(newNomination)\n        console.log(nominations);\n      }\n      console.log(nominations.length);\n      if(nominations.length > 3){ // Starts counting from 0, so will trigger at 5 nominations\n        // showBanner()\n        alert(\"You have added 5 or more nominated movies\")\n      }\n    }\n\n    // Function to remove the nominations based on the IMDBId\n    function removeNomination(id) { \n      const newNomination = nominations.filter((film) => film.imdbID !== id)\n      setNominations(newNomination)\n      console.log(nominations);\n    }\n    \n  return (\n    //indentations being a nightmare here\n  <div className=\"App\">\n    <form className=\"search-form\" \n      onSubmit={getSearch} \n      onChange={getSearch}>\n      <h1 className=\"title-text\">The Shoppies: Movie awards for entrepreneurs</h1>\n      <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} /> <button className=\"search-button\" type=\"submit\">Search</button>\n    </form>\n\n    {/* show number of results found */}\n    <h3>{(movies && movies.length > 0) ? movies.length: \"1\"} Result(s) for \"<b>{query}</b>\"</h3>\n    <div className=\"MOV\">\n      {/* Probably could've made a component for this */}\n      <div className=\"movies-list\">\n        {movies ? movies.map(movie => (\n        <ul>\n          <li><Movie\n          id={movie.imdbID}\n          title = {movie.Title}\n          year = {movie.Year}\n          img = {movie.Poster}\n          ></Movie> \n          <Button className=\"Button\" disabled={nominations.includes(movie)} onClick={() => {addNomination(movie)}}>Nominate</Button>\n          </li>\n          </ul>\n    )) : <h3> <i>No results found for \"{query}\"</i></h3>}\n    </div>\n\n    <div className=\"nominations-list\">\n      <h3>Nominations</h3>\n      {nominations.map(nomination => (\n        <ul>\n          <li>\n            <Movie\n               id={nomination.imdbID}\n               title = {nomination.Title}\n               year = {nomination.Year}\n               img = {nomination.Poster}\n             />\n              <Button className=\"Button\" onClick={() => {removeNomination(nomination.imdbID)}}>Remove Nomination</Button>\n          </li>\n        </ul>\n      ))}\n      {/* life is closing div tags */}\n      </div>\n      </div>\n      </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}